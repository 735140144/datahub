"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[2970],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>u});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(a),u=r,h=c["".concat(l,".").concat(u)]||c[u]||m[u]||o;return a?n.createElement(h,i(i({ref:t},d),{},{components:a})):n.createElement(h,i({ref:t},d))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},60179:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=a(83117),r=(a(67294),a(3905));const o={title:"Creating Domains",slug:"/api/tutorials/creating-domain",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/api/tutorials/creating-domain.md"},i="Creating Domains",s={unversionedId:"docs/api/tutorials/creating-domain",id:"docs/api/tutorials/creating-domain",title:"Creating Domains",description:"Why Would You Create Domains?",source:"@site/genDocs/docs/api/tutorials/creating-domain.md",sourceDirName:"docs/api/tutorials",slug:"/api/tutorials/creating-domain",permalink:"/docs/api/tutorials/creating-domain",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/api/tutorials/creating-domain.md",tags:[],version:"current",frontMatter:{title:"Creating Domains",slug:"/api/tutorials/creating-domain",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/api/tutorials/creating-domain.md"},sidebar:"overviewSidebar",previous:{title:"Creating or Updating Users And Groups",permalink:"/docs/api/tutorials/creating-users-and-groups"},next:{title:"Reading Tags On Datasets/Columns",permalink:"/docs/api/tutorials/reading-tags"}},l={},p=[{value:"Why Would You Create Domains?",id:"why-would-you-create-domains",level:2},{value:"Goal Of This Guide",id:"goal-of-this-guide",level:3},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Create Domain with GrpahQL",id:"create-domain-with-grpahql",level:2},{value:"GraphQL Explorer",id:"graphql-explorer",level:3},{value:"CURL",id:"curl",level:3},{value:"Create a Domain With Python SDK",id:"create-a-domain-with-python-sdk",level:2},{value:"Expected Outcomes",id:"expected-outcomes",level:2},{value:"What&#39;s Next?",id:"whats-next",level:2}],d={toc:p};function m(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"creating-domains"},"Creating Domains"),(0,r.kt)("h2",{id:"why-would-you-create-domains"},"Why Would You Create Domains?"),(0,r.kt)("p",null,"Domains are curated, top-level folders or categories where related assets can be explicitly grouped. Management of Domains can be centralized, or distributed out to Domain owners Currently, an asset can belong to only one Domain at a time.\nFor more information about domains, refer to ",(0,r.kt)("a",{parentName:"p",href:"/docs/domains"},"About DataHub Domains"),"."),(0,r.kt)("h3",{id:"goal-of-this-guide"},"Goal Of This Guide"),(0,r.kt)("p",null,"This guide will show you how to create a domain named ",(0,r.kt)("inlineCode",{parentName:"p"},"Marketing"),"."),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"For this tutorial, you need to deploy DataHub Quickstart and ingest sample data.\nFor detailed steps, please refer to ",(0,r.kt)("a",{parentName:"p",href:"/docs/quickstart"},"Datahub Quickstart Guide"),"."),(0,r.kt)("h2",{id:"create-domain-with-grpahql"},"Create Domain with GrpahQL"),(0,r.kt)("p",null,"::note\nPlease note that there are two available endpoints (",(0,r.kt)("inlineCode",{parentName:"p"},":8000"),", ",(0,r.kt)("inlineCode",{parentName:"p"},":9002"),") to access GraphQL.\nFor more information about the differences between these endpoints, please refer to ",(0,r.kt)("a",{parentName:"p",href:"/docs/metadata-service#graphql-api"},"DataHub Metadata Service"),"\n:::"),(0,r.kt)("h3",{id:"graphql-explorer"},"GraphQL Explorer"),(0,r.kt)("p",null,"GraphQL Explorer is the fastest way to experiment with GraphQL without any dependencies.\nNavigate to GraphQL Explorer (",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:9002/api/graphiql"),") and run the following query."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'mutation createDomain {\n  createDomain(input: { name: "Marketing", description: "Entities related to the marketing department" })\n}\n')),(0,r.kt)("p",null,"If you see the following response, the operation was successful:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "createDomain": "<domain_urn>"\n  },\n  "extensions": {}\n}\n')),(0,r.kt)("h3",{id:"curl"},"CURL"),(0,r.kt)("p",null,"With CURL, you need to provide tokens. To generate a token, please refer to ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/graphql/token-management"},"Access Token Management"),".\nWith ",(0,r.kt)("inlineCode",{parentName:"p"},"accessToken"),", you can run the following command."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl --location --request POST \'http://localhost:8080/api/graphql\' \\\n--header \'Authorization: Bearer <my-access-token>\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{ "query": "mutation createDomain { createDomain(input: { name: \\"Marketing\\", description: \\"Entities related to the marketing department.\\" }) }", "variables":{}}\'\n')),(0,r.kt)("p",null,"Expected Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{ "data": { "createDomain": "<domain_urn>" }, "extensions": {} }\n')),(0,r.kt)("h2",{id:"create-a-domain-with-python-sdk"},"Create a Domain With Python SDK"),(0,r.kt)("p",null,"The following code creates a domain named ",(0,r.kt)("inlineCode",{parentName:"p"},"Marketing"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/create_domain.py\nimport logging\n\nfrom datahub.emitter.mce_builder import make_domain_urn\nfrom datahub.emitter.mcp import MetadataChangeProposalWrapper\nfrom datahub.emitter.rest_emitter import DatahubRestEmitter\nfrom datahub.metadata.schema_classes import ChangeTypeClass, DomainPropertiesClass\n\nlog = logging.getLogger(__name__)\nlogging.basicConfig(level=logging.INFO)\n\ndomain_urn = make_domain_urn("marketing")\ndomain_properties_aspect = DomainPropertiesClass(\n    name="Marketing", description="Entities related to the marketing department"\n)\n\nevent: MetadataChangeProposalWrapper = MetadataChangeProposalWrapper(\n    entityType="domain",\n    changeType=ChangeTypeClass.UPSERT,\n    entityUrn=domain_urn,\n    aspect=domain_properties_aspect,\n)\n\nrest_emitter = DatahubRestEmitter(gms_server="http://localhost:8080")\nrest_emitter.emit(event)\nlog.info(f"Created domain {domain_urn}")\n\n')),(0,r.kt)("p",null,"We're using the ",(0,r.kt)("inlineCode",{parentName:"p"},"MetdataChangeProposalWrapper")," to change entities in this example.\nFor more information about the ",(0,r.kt)("inlineCode",{parentName:"p"},"MetadataChangeProposal"),", please refer to ",(0,r.kt)("a",{parentName:"p",href:"/docs/advanced/mcp-mcl"},"MetadataChangeProposal & MetadataChangeLog Events")),(0,r.kt)("h2",{id:"expected-outcomes"},"Expected Outcomes"),(0,r.kt)("p",null,"You can now see ",(0,r.kt)("inlineCode",{parentName:"p"},"Marketing")," domain has been created under ",(0,r.kt)("inlineCode",{parentName:"p"},"Govern > Domains"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"domain-created",src:a(69380).Z,width:"1846",height:"634"})),(0,r.kt)("h2",{id:"whats-next"},"What's Next?"),(0,r.kt)("p",null,"Now that you created a domain, how about enriching it? Here is a guide that you can check out."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/api/tutorials/adding-domain"},"how to add a dataset to a domain"),".")))}m.isMDXComponent=!0},69380:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/domain-created-e7a4f8ed5c54a0f42d08dc5949a8789a.png"}}]);