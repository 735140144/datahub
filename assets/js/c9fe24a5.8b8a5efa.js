"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[2954],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>g});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),s=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},d=function(t){var e=s(t.components);return a.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),m=s(n),g=r,c=m["".concat(p,".").concat(g)]||m[g]||u[g]||l;return n?a.createElement(c,i(i({ref:e},d),{},{components:n})):a.createElement(c,i({ref:e},d))}));function g(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},18679:(t,e,n)=>{n.d(e,{Z:()=>i});var a=n(67294),r=n(86010);const l="tabItem_Ymn6";function i(t){let{children:e,hidden:n,className:i}=t;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:n},e)}},34259:(t,e,n)=>{n.d(e,{Z:()=>g});var a=n(87462),r=n(67294),l=n(86010),i=n(51048),o=n(33609),p=n(1943),s=n(72957);const d="tabList__CuJ",u="tabItem_LNqP";function m(t){const{lazy:e,block:n,defaultValue:i,values:m,groupId:g,className:c}=t,k=r.Children.map(t.children,(t=>{if((0,r.isValidElement)(t)&&"value"in t.props)return t;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof t.type?t.type:t.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),N=m??k.map((t=>{let{props:{value:e,label:n,attributes:a}}=t;return{value:e,label:n,attributes:a}})),b=(0,o.l)(N,((t,e)=>t.value===e.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((t=>t.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===i?i:i??k.find((t=>t.props.default))?.props.value??k[0].props.value;if(null!==h&&!N.some((t=>t.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${N.map((t=>t.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:y}=(0,p.U)(),[w,v]=(0,r.useState)(h),_=[],{blockElementScrollPositionUntilNextRender:P}=(0,s.o5)();if(null!=g){const t=f[g];null!=t&&t!==w&&N.some((e=>e.value===t))&&v(t)}const S=t=>{const e=t.currentTarget,n=_.indexOf(e),a=N[n].value;a!==w&&(P(e),v(a),null!=g&&y(g,String(a)))},C=t=>{let e=null;switch(t.key){case"Enter":S(t);break;case"ArrowRight":{const n=_.indexOf(t.currentTarget)+1;e=_[n]??_[0];break}case"ArrowLeft":{const n=_.indexOf(t.currentTarget)-1;e=_[n]??_[_.length-1];break}}e?.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",d)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},c)},N.map((t=>{let{value:e,label:n,attributes:i}=t;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===e?0:-1,"aria-selected":w===e,key:e,ref:t=>_.push(t),onKeyDown:C,onClick:S},i,{className:(0,l.Z)("tabs__item",u,i?.className,{"tabs__item--active":w===e})}),n??e)}))),e?(0,r.cloneElement)(k.filter((t=>t.props.value===w))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},k.map(((t,e)=>(0,r.cloneElement)(t,{key:e,hidden:t.props.value!==w})))))}function g(t){const e=(0,i.Z)();return r.createElement(m,(0,a.Z)({key:String(e)},t))}},36903:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>p,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var a=n(87462),r=(n(67294),n(3905)),l=n(34259),i=n(18679);const o={title:"PowerBI",slug:"/generated/ingestion/sources/powerbi",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/powerbi.md"},p="PowerBI",s={unversionedId:"docs/generated/ingestion/sources/powerbi",id:"docs/generated/ingestion/sources/powerbi",title:"PowerBI",description:"There are 2 sources that provide integration with PowerBI",source:"@site/genDocs/docs/generated/ingestion/sources/powerbi.md",sourceDirName:"docs/generated/ingestion/sources",slug:"/generated/ingestion/sources/powerbi",permalink:"/docs/generated/ingestion/sources/powerbi",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/powerbi.md",tags:[],version:"current",frontMatter:{title:"PowerBI",slug:"/generated/ingestion/sources/powerbi",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/powerbi.md"},sidebar:"overviewSidebar",previous:{title:"Postgres",permalink:"/docs/generated/ingestion/sources/postgres"},next:{title:"Presto on Hive",permalink:"/docs/generated/ingestion/sources/presto-on-hive"}},d={},u=[{value:"Module <code>powerbi</code>",id:"module-powerbi",level:2},{value:"Important Capabilities",id:"important-capabilities",level:3},{value:"Configuration Notes",id:"configuration-notes",level:2},{value:"Concept mapping",id:"concept-mapping",level:2},{value:"Lineage",id:"lineage",level:2},{value:"M-Query Pattern Supported For Lineage Extraction",id:"m-query-pattern-supported-for-lineage-extraction",level:2},{value:"Extract endorsements to tags",id:"extract-endorsements-to-tags",level:2},{value:"CLI based Ingestion",id:"cli-based-ingestion",level:3},{value:"Install the Plugin",id:"install-the-plugin",level:4},{value:"Starter Recipe",id:"starter-recipe",level:3},{value:"Config Details",id:"config-details",level:3},{value:"Code Coordinates",id:"code-coordinates",level:3},{value:"Module <code>powerbi-report-server</code>",id:"module-powerbi-report-server",level:2},{value:"Important Capabilities",id:"important-capabilities-1",level:3},{value:"Configuration Notes",id:"configuration-notes-1",level:2},{value:"Concept mapping",id:"concept-mapping-1",level:2},{value:"CLI based Ingestion",id:"cli-based-ingestion-1",level:3},{value:"Install the Plugin",id:"install-the-plugin-1",level:4},{value:"Starter Recipe",id:"starter-recipe-1",level:3},{value:"Config Details",id:"config-details-1",level:3},{value:"Code Coordinates",id:"code-coordinates-1",level:3},{value:"Questions",id:"questions",level:2}],m={toc:u};function g(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"powerbi"},"PowerBI"),(0,r.kt)("p",null,"There are 2 sources that provide integration with PowerBI"),(0,r.kt)("table",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"Source Module"),(0,r.kt)("td",null,"Documentation")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"powerbi"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"This plugin extracts the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Power BI dashboards, tiles and datasets"),(0,r.kt)("li",{parentName:"ul"},"Names, descriptions and URLs of dashboard and tile"),(0,r.kt)("li",{parentName:"ul"},"Owners of dashboards\n",(0,r.kt)("a",{parentName:"li",href:"#module-powerbi"},"Read more..."))))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"powerbi-report-server"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Use this plugin to connect to ",(0,r.kt)("a",{parentName:"p",href:"https://powerbi.microsoft.com/en-us/report-server/"},"PowerBI Report Server"),".\nIt extracts the following:"),(0,r.kt)("p",null,"Metadata that can be ingested:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"report name"),(0,r.kt)("li",{parentName:"ul"},"report description"),(0,r.kt)("li",{parentName:"ul"},"ownership(can add existing users in DataHub as owners)"),(0,r.kt)("li",{parentName:"ul"},"transfer folders structure to DataHub as it is in Report Server"),(0,r.kt)("li",{parentName:"ul"},"webUrl to report in Report Server")),(0,r.kt)("p",null,"Due to limits of PBIRS REST API, it's impossible to ingest next data for now:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"tiles info"),(0,r.kt)("li",{parentName:"ul"},"datasource of report"),(0,r.kt)("li",{parentName:"ul"},"dataset of report")),(0,r.kt)("p",null,"Next types of report can be ingested:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"PowerBI report(.pbix)"),(0,r.kt)("li",{parentName:"ul"},"Paginated report(.rdl)"),(0,r.kt)("li",{parentName:"ul"},"Mobile report"),(0,r.kt)("li",{parentName:"ul"},"Linked report\n",(0,r.kt)("a",{parentName:"li",href:"#module-powerbi-report-server"},"Read more...")))))),(0,r.kt)("h2",{id:"module-powerbi"},"Module ",(0,r.kt)("inlineCode",{parentName:"h2"},"powerbi")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/support%20status-certified-brightgreen",alt:"Certified"})),(0,r.kt)("h3",{id:"important-capabilities"},"Important Capabilities"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Capability"),(0,r.kt)("th",{parentName:"tr",align:null},"Status"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Extract Ownership"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null},"On by default but can disabled by configuration")))),(0,r.kt)("p",null,"This plugin extracts the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Power BI dashboards, tiles and datasets"),(0,r.kt)("li",{parentName:"ul"},"Names, descriptions and URLs of dashboard and tile"),(0,r.kt)("li",{parentName:"ul"},"Owners of dashboards")),(0,r.kt)("h2",{id:"configuration-notes"},"Configuration Notes"),(0,r.kt)("p",null,"See the "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/power-bi/developer/embedded/embed-service-principal"},"Microsoft AD App Creation doc")," for the steps to create an app client ID and secret"),(0,r.kt)("li",{parentName:"ol"},"Login to Power BI as Admin and from Tenant settings allow below permissions")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Allow service principles to use Power BI APIs"),(0,r.kt)("li",{parentName:"ul"},"Allow service principals to use read-only Power BI admin APIs"),(0,r.kt)("li",{parentName:"ul"},"Enhance admin APIs responses with detailed metadata")),(0,r.kt)("h2",{id:"concept-mapping"},"Concept mapping"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Power BI"),(0,r.kt)("th",{parentName:"tr",align:null},"Datahub"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Dashboard")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Dashboard"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Dataset's Table")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Dataset"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Tile")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Chart"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Report.webUrl")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Chart.externalUrl"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Workspace")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"N/A"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Report")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Dashboard"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Page")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Chart"))))),(0,r.kt)("p",null,"If Tile is created from report then Chart.externalUrl is set to Report.webUrl."),(0,r.kt)("h2",{id:"lineage"},"Lineage"),(0,r.kt)("p",null,"This source extract table lineage for tables present in Power BI Datasets. Lets consider a PowerBI Dataset ",(0,r.kt)("inlineCode",{parentName:"p"},"SALES_REPORT")," and a PostgreSQL database is configured as data-source in ",(0,r.kt)("inlineCode",{parentName:"p"},"SALES_REPORT")," dataset. "),(0,r.kt)("p",null,"Consider ",(0,r.kt)("inlineCode",{parentName:"p"},"SALES_REPORT")," PowerBI Dataset has a table ",(0,r.kt)("inlineCode",{parentName:"p"},"SALES_ANALYSIS")," which is backed by ",(0,r.kt)("inlineCode",{parentName:"p"},"SALES_ANALYSIS_VIEW")," of PostgreSQL Database then in this case ",(0,r.kt)("inlineCode",{parentName:"p"},"SALES_ANALYSIS_VIEW")," will appear as upstream dataset for ",(0,r.kt)("inlineCode",{parentName:"p"},"SALES_ANALYSIS")," table."),(0,r.kt)("p",null,"You can control table lineage ingestion using ",(0,r.kt)("inlineCode",{parentName:"p"},"extract_lineage")," configuration parameter, by default it is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),". "),(0,r.kt)("p",null,"PowerBI Source extracts the lineage information by parsing PowerBI M-Query expression."),(0,r.kt)("p",null,"PowerBI Source supports M-Query expression for below listed PowerBI Data Sources "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Snowflake "),(0,r.kt)("li",{parentName:"ol"},"Oracle "),(0,r.kt)("li",{parentName:"ol"},"PostgreSQL"),(0,r.kt)("li",{parentName:"ol"},"Microsoft SQL Server")),(0,r.kt)("p",null,"Native SQL query parsing is only supported for ",(0,r.kt)("inlineCode",{parentName:"p"},"Snowflake")," data-source and only first table from ",(0,r.kt)("inlineCode",{parentName:"p"},"FROM")," clause will be ingested as upstream table. Advance SQL construct like JOIN and SUB-QUERIES in ",(0,r.kt)("inlineCode",{parentName:"p"},"FROM")," clause are not supported."),(0,r.kt)("p",null,"For example refer below native SQL query. The table ",(0,r.kt)("inlineCode",{parentName:"p"},"OPERATIONS_ANALYTICS.TRANSFORMED_PROD.V_UNIT_TARGET")," will be ingested as upstream table."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'let\n  Source = Value.NativeQuery(\n    Snowflake.Databases(\n      "sdfsd788.ws-east-2.fakecomputing.com", \n      "operations_analytics_prod", \n      [Role = "OPERATIONS_ANALYTICS_MEMBER"]\n    ){[Name = "OPERATIONS_ANALYTICS"]}[Data], \n    "select #(lf)UPPER(REPLACE(AGENT_NAME,\\\'-\\\',\\\'\\\')) AS Agent,#(lf)TIER,#(lf)UPPER(MANAGER),#(lf)TEAM_TYPE,#(lf)DATE_TARGET,#(lf)MONTHID,#(lf)TARGET_TEAM,#(lf)SELLER_EMAIL,#(lf)concat((UPPER(REPLACE(AGENT_NAME,\\\'-\\\',\\\'\\\'))), MONTHID) as AGENT_KEY,#(lf)UNIT_TARGET AS SME_Quota,#(lf)AMV_TARGET AS Revenue_Quota,#(lf)SERVICE_QUOTA,#(lf)BL_TARGET,#(lf)SOFTWARE_QUOTA as Software_Quota#(lf)#(lf)from OPERATIONS_ANALYTICS.TRANSFORMED_PROD.V_UNIT_TARGETS#(lf)#(lf)where YEAR_TARGET >= 2020#(lf)and TEAM_TYPE = \\\'foo\\\'#(lf)and TARGET_TEAM = \\\'bar\\\'", \n    null, \n    [EnableFolding = true]\n  ), \n  #"Added Conditional Column" = Table.AddColumn(\n    Source, \n    "Has PS Software Quota?", \n    each \n      if [TIER] = "Expansion (Medium)" then\n        "Yes"\n      else if [TIER] = "Acquisition" then\n        "Yes"\n      else\n        "No"\n  )\nin\n  #"Added Conditional Column"\n')),(0,r.kt)("h2",{id:"m-query-pattern-supported-for-lineage-extraction"},"M-Query Pattern Supported For Lineage Extraction"),(0,r.kt)("p",null,"Lets consider a M-Query which combine two PostgreSQL tables. Such M-Query can be written as per below patterns."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Pattern-1")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'let\nSource = PostgreSQL.Database("localhost", "book_store"),\nbook_date = Source{[Schema="public",Item="book"]}[Data],\nissue_history = Source{[Schema="public",Item="issue_history"]}[Data],\ncombine_result  = Table.Combine({book_date, issue_history})\nin\ncombine_result\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Pattern-2")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'let\nSource = PostgreSQL.Database("localhost", "book_store"),\ncombine_result  = Table.Combine({Source{[Schema="public",Item="book"]}[Data], Source{[Schema="public",Item="issue_history"]}[Data]})\nin\ncombine_result\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Pattern-2")," is ",(0,r.kt)("em",{parentName:"p"},"not")," supported for upstream table lineage extraction as it uses nested item-selector i.e. {Source{",'[Schema="public",Item="book"]',"}","[Data]",", Source{",'[Schema="public",Item="issue_history"]',"}","[Data]","} as argument to M-QUery table function i.e. Table.Combine"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Pattern-1")," is supported as it first assign the table from schema to variable and then variable is used in M-Query Table function i.e. Table.Combine"),(0,r.kt)("h2",{id:"extract-endorsements-to-tags"},"Extract endorsements to tags"),(0,r.kt)("p",null,"By default, extracting endorsement information to tags is disabled. The feature may be useful if organization uses ",(0,r.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/power-bi/collaborate-share/service-endorse-content"},"endorsements")," to identify content quality."),(0,r.kt)("p",null,"Please note that the default implementation overwrites tags for the ingested entities, if you need to preserve existing tags, consider using a ",(0,r.kt)("a",{parentName:"p",href:"/docs/metadata-ingestion/docs/transformer/dataset_transformer#simple-add-dataset-globaltags"},"transformer")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"semantics: PATCH")," tags instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"OVERWRITE"),"."),(0,r.kt)("h3",{id:"cli-based-ingestion"},"CLI based Ingestion"),(0,r.kt)("h4",{id:"install-the-plugin"},"Install the Plugin"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"pip install 'acryl-datahub[powerbi]'\n")),(0,r.kt)("h3",{id:"starter-recipe"},"Starter Recipe"),(0,r.kt)("p",null,"Check out the following recipe to get started with ingestion! See ",(0,r.kt)("a",{parentName:"p",href:"#config-details"},"below")," for full configuration options."),(0,r.kt)("p",null,"For general pointers on writing and running a recipe, see our ",(0,r.kt)("a",{parentName:"p",href:"/docs/metadata-ingestion#recipes"},"main recipe guide"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'source:\n  type: "powerbi"\n  config:\n    # Your Power BI tenant identifier\n    tenant_id: a949d688-67c0-4bf1-a344-e939411c6c0a\n    # Ingest elements of below PowerBi Workspace into Datahub\n    workspace_id_pattern:\n      allow:\n        - 4bd10256-e999-45dd-8e56-571c77153a5f\n      deny:\n    # Workspaces dataset environments (PROD, DEV, QA, STAGE)\n    env: DEV\n    # Azure AD Application identifier\n    client_id: foo\n    # Azure AD App client secret\n    client_secret: bar\n    # Enable / Disable ingestion of user information for dashboards\n    extract_ownership: true\n    # Enable / Disable ingestion of endorsements.\n    # Please notice that this may overwrite any existing tags defined to ingested entities!\n    extract_endorsements_to_tags: false\n    # dataset_type_mapping is fixed mapping of Power BI datasources type to equivalent Datahub "data platform" dataset\n    dataset_type_mapping:\n        PostgreSql: postgres\n        Oracle: oracle\n\nsink:\n  # sink configs\n\n')),(0,r.kt)("h3",{id:"config-details"},"Config Details"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"options",label:"Options",default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,"Note that a ",(0,r.kt)("inlineCode",{parentName:"p"},".")," is used to denote nested fields in the YAML recipe."),(0,r.kt)("details",{open:!0},(0,r.kt)("summary",null,"View All Configuration Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"env"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The environment that all assets produced by this connector belong to"),(0,r.kt)("td",{parentName:"tr",align:null},"PROD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"tenant_id"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"PowerBI tenant identifier"),(0,r.kt)("td",{parentName:"tr",align:null},"None")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"workspace_id"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"[deprecated]"," Use workspace_id_pattern instead"),(0,r.kt)("td",{parentName:"tr",align:null},"None")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"dataset_type_mapping"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null},"Generic dict"),(0,r.kt)("td",{parentName:"tr",align:null},"Mapping of PowerBI datasource type to DataHub supported data-sources. See Quickstart Recipe for mapping"),(0,r.kt)("td",{parentName:"tr",align:null},"None")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"client_id"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Azure app client identifier"),(0,r.kt)("td",{parentName:"tr",align:null},"None")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"client_secret"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Azure app client secret"),(0,r.kt)("td",{parentName:"tr",align:null},"None")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"scan_timeout"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"timeout for PowerBI metadata scanning"),(0,r.kt)("td",{parentName:"tr",align:null},"60")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"extract_ownership"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether ownership should be ingested"),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"extract_reports"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether reports should be ingested"),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"extract_lineage"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether lineage should be ingested"),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"extract_endorsements_to_tags"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to extract endorsements to tags, note that this may overwrite existing tags"),(0,r.kt)("td",{parentName:"tr",align:null},"False")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"native_query_parsing"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether PowerBI native query should be parsed to extract lineage"),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"convert_urns_to_lowercase"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to convert the PowerBI assets urns to lowercase"),(0,r.kt)("td",{parentName:"tr",align:null},"False")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"convert_lineage_urns_to_lowercase"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to convert the urns of ingested lineage dataset to lowercase"),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"platform_name"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"powerbi")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"platform_urn"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"urn:li:dataPlatform:powerbi")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"workspace_id_pattern"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"AllowDenyPattern (see below for fields)"),(0,r.kt)("td",{parentName:"tr",align:null},"Regex patterns to filter PowerBI workspaces in ingestion"),(0,r.kt)("td",{parentName:"tr",align:null},"{'allow': ","['.*']",", 'deny': [], 'ignoreCase': True}")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"workspace_id_pattern.allow"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Array of string"),(0,r.kt)("td",{parentName:"tr",align:null},"List of regex patterns to include in ingestion"),(0,r.kt)("td",{parentName:"tr",align:null},"['.*']")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"workspace_id_pattern.deny"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Array of string"),(0,r.kt)("td",{parentName:"tr",align:null},"List of regex patterns to exclude from ingestion."),(0,r.kt)("td",{parentName:"tr",align:null},"[]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"workspace_id_pattern.ignoreCase"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to ignore case sensitivity during pattern matching."),(0,r.kt)("td",{parentName:"tr",align:null},"True")))))),(0,r.kt)(i.Z,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://json-schema.org/"},"JSONSchema")," for this configuration is inlined below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "title": "PowerBiDashboardSourceConfig",\n  "description": "Any source that produces dataset urns in a single environment should inherit this class",\n  "type": "object",\n  "properties": {\n    "env": {\n      "title": "Env",\n      "description": "The environment that all assets produced by this connector belong to",\n      "default": "PROD",\n      "type": "string"\n    },\n    "tenant_id": {\n      "title": "Tenant Id",\n      "description": "PowerBI tenant identifier",\n      "type": "string"\n    },\n    "workspace_id": {\n      "title": "Workspace Id",\n      "description": "[deprecated] Use workspace_id_pattern instead",\n      "type": "string"\n    },\n    "workspace_id_pattern": {\n      "title": "Workspace Id Pattern",\n      "description": "Regex patterns to filter PowerBI workspaces in ingestion",\n      "default": {\n        "allow": [\n          ".*"\n        ],\n        "deny": [],\n        "ignoreCase": true\n      },\n      "allOf": [\n        {\n          "$ref": "#/definitions/AllowDenyPattern"\n        }\n      ]\n    },\n    "dataset_type_mapping": {\n      "title": "Dataset Type Mapping",\n      "description": "Mapping of PowerBI datasource type to DataHub supported data-sources. See Quickstart Recipe for mapping",\n      "anyOf": [\n        {\n          "type": "object",\n          "additionalProperties": {\n            "type": "string"\n          }\n        },\n        {\n          "type": "object",\n          "additionalProperties": {\n            "$ref": "#/definitions/PlatformDetail"\n          }\n        }\n      ]\n    },\n    "client_id": {\n      "title": "Client Id",\n      "description": "Azure app client identifier",\n      "type": "string"\n    },\n    "client_secret": {\n      "title": "Client Secret",\n      "description": "Azure app client secret",\n      "type": "string"\n    },\n    "scan_timeout": {\n      "title": "Scan Timeout",\n      "description": "timeout for PowerBI metadata scanning",\n      "default": 60,\n      "type": "integer"\n    },\n    "extract_ownership": {\n      "title": "Extract Ownership",\n      "description": "Whether ownership should be ingested",\n      "default": true,\n      "type": "boolean"\n    },\n    "extract_reports": {\n      "title": "Extract Reports",\n      "description": "Whether reports should be ingested",\n      "default": true,\n      "type": "boolean"\n    },\n    "extract_lineage": {\n      "title": "Extract Lineage",\n      "description": "Whether lineage should be ingested",\n      "default": true,\n      "type": "boolean"\n    },\n    "extract_endorsements_to_tags": {\n      "title": "Extract Endorsements To Tags",\n      "description": "Whether to extract endorsements to tags, note that this may overwrite existing tags",\n      "default": false,\n      "type": "boolean"\n    },\n    "native_query_parsing": {\n      "title": "Native Query Parsing",\n      "description": "Whether PowerBI native query should be parsed to extract lineage",\n      "default": true,\n      "type": "boolean"\n    },\n    "convert_urns_to_lowercase": {\n      "title": "Convert Urns To Lowercase",\n      "description": "Whether to convert the PowerBI assets urns to lowercase",\n      "default": false,\n      "type": "boolean"\n    },\n    "convert_lineage_urns_to_lowercase": {\n      "title": "Convert Lineage Urns To Lowercase",\n      "description": "Whether to convert the urns of ingested lineage dataset to lowercase",\n      "default": true,\n      "type": "boolean"\n    },\n    "platform_name": {\n      "title": "Platform Name",\n      "default": "powerbi",\n      "type": "string"\n    },\n    "platform_urn": {\n      "title": "Platform Urn",\n      "default": "urn:li:dataPlatform:powerbi",\n      "type": "string"\n    }\n  },\n  "required": [\n    "tenant_id",\n    "dataset_type_mapping",\n    "client_id",\n    "client_secret"\n  ],\n  "additionalProperties": false,\n  "definitions": {\n    "AllowDenyPattern": {\n      "title": "AllowDenyPattern",\n      "description": "A class to store allow deny regexes",\n      "type": "object",\n      "properties": {\n        "allow": {\n          "title": "Allow",\n          "description": "List of regex patterns to include in ingestion",\n          "default": [\n            ".*"\n          ],\n          "type": "array",\n          "items": {\n            "type": "string"\n          }\n        },\n        "deny": {\n          "title": "Deny",\n          "description": "List of regex patterns to exclude from ingestion.",\n          "default": [],\n          "type": "array",\n          "items": {\n            "type": "string"\n          }\n        },\n        "ignoreCase": {\n          "title": "Ignorecase",\n          "description": "Whether to ignore case sensitivity during pattern matching.",\n          "default": true,\n          "type": "boolean"\n        }\n      },\n      "additionalProperties": false\n    },\n    "PlatformDetail": {\n      "title": "PlatformDetail",\n      "type": "object",\n      "properties": {\n        "platform_instance": {\n          "title": "Platform Instance",\n          "description": "DataHub platform instance name. It should be same as you have used in ingestion receipe of DataHub platform ingestion source of particular platform",\n          "type": "string"\n        },\n        "env": {\n          "title": "Env",\n          "description": "The environment that all assets produced by DataHub platform ingestion source belong to",\n          "default": "PROD",\n          "type": "string"\n        }\n      },\n      "additionalProperties": false\n    }\n  }\n}\n')))),(0,r.kt)("h3",{id:"code-coordinates"},"Code Coordinates"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Class Name: ",(0,r.kt)("inlineCode",{parentName:"li"},"datahub.ingestion.source.powerbi.powerbi.PowerBiDashboardSource")),(0,r.kt)("li",{parentName:"ul"},"Browse on ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/src/datahub/ingestion/source/powerbi/powerbi.py"},"GitHub"))),(0,r.kt)("h2",{id:"module-powerbi-report-server"},"Module ",(0,r.kt)("inlineCode",{parentName:"h2"},"powerbi-report-server")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/support%20status-incubating-blue",alt:"Incubating"})),(0,r.kt)("h3",{id:"important-capabilities-1"},"Important Capabilities"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Capability"),(0,r.kt)("th",{parentName:"tr",align:null},"Status"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Extract Ownership"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null},"Enabled by default")))),(0,r.kt)("p",null,"Use this plugin to connect to ",(0,r.kt)("a",{parentName:"p",href:"https://powerbi.microsoft.com/en-us/report-server/"},"PowerBI Report Server"),".\nIt extracts the following:"),(0,r.kt)("p",null,"Metadata that can be ingested:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"report name"),(0,r.kt)("li",{parentName:"ul"},"report description"),(0,r.kt)("li",{parentName:"ul"},"ownership(can add existing users in DataHub as owners)"),(0,r.kt)("li",{parentName:"ul"},"transfer folders structure to DataHub as it is in Report Server"),(0,r.kt)("li",{parentName:"ul"},"webUrl to report in Report Server")),(0,r.kt)("p",null,"Due to limits of PBIRS REST API, it's impossible to ingest next data for now:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"tiles info"),(0,r.kt)("li",{parentName:"ul"},"datasource of report"),(0,r.kt)("li",{parentName:"ul"},"dataset of report")),(0,r.kt)("p",null,"Next types of report can be ingested:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"PowerBI report(.pbix)"),(0,r.kt)("li",{parentName:"ul"},"Paginated report(.rdl)"),(0,r.kt)("li",{parentName:"ul"},"Mobile report"),(0,r.kt)("li",{parentName:"ul"},"Linked report")),(0,r.kt)("h2",{id:"configuration-notes-1"},"Configuration Notes"),(0,r.kt)("p",null,"See the "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/sql/reporting-services/security/grant-user-access-to-a-report-server?view=sql-server-ver16"},"Microsoft Grant user access to a Report Server doc")),(0,r.kt)("li",{parentName:"ol"},"Use your user credentials from previous step in yaml file")),(0,r.kt)("h2",{id:"concept-mapping-1"},"Concept mapping"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Power BI Report Server"),(0,r.kt)("th",{parentName:"tr",align:null},"Datahub"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Paginated Report")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Dashboard"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Power BI Report")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Dashboard"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Mobile Report")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Dashboard"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Linked Report")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Dashboard"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Dataset, Datasource")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"N/A"))))),(0,r.kt)("h3",{id:"cli-based-ingestion-1"},"CLI based Ingestion"),(0,r.kt)("h4",{id:"install-the-plugin-1"},"Install the Plugin"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"pip install 'acryl-datahub[powerbi-report-server]'\n")),(0,r.kt)("h3",{id:"starter-recipe-1"},"Starter Recipe"),(0,r.kt)("p",null,"Check out the following recipe to get started with ingestion! See ",(0,r.kt)("a",{parentName:"p",href:"#config-details"},"below")," for full configuration options."),(0,r.kt)("p",null,"For general pointers on writing and running a recipe, see our ",(0,r.kt)("a",{parentName:"p",href:"/docs/metadata-ingestion#recipes"},"main recipe guide"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"source:\n  type: powerbi-report-server\n  config:\n    # Your Power BI Report Server Windows username\n    username: username\n    # Your Power BI Report Server Windows password\n    password: password\n    # Your Workstation name\n    workstation_name: workstation_name\n    # Your Power BI Report Server host URL, example: localhost:80\n    host_port: host_port\n    # Your alias for Power BI Report Server host URL, example: local_powerbi_report_server\n    server_alias: server_alias\n    # Workspace's dataset environments, example: (PROD, DEV, QA, STAGE)\n    env: DEV\n    # Your Power BI Report Server base virtual directory name for reports\n    report_virtual_directory_name: Reports\n    #  Your Power BI Report Server base virtual directory name for report server\n    report_server_virtual_directory_name: ReportServer\n    # Enable/Disable extracting ownership information of Dashboard\n    extract_ownership: True\n    # Set ownership type\n    ownership_type: TECHNICAL_OWNER\n\n\nsink:\n  # sink configs\n")),(0,r.kt)("h3",{id:"config-details-1"},"Config Details"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"options",label:"Options",default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,"Note that a ",(0,r.kt)("inlineCode",{parentName:"p"},".")," is used to denote nested fields in the YAML recipe."),(0,r.kt)("details",{open:!0},(0,r.kt)("summary",null,"View All Configuration Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"env"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The environment that all assets produced by this connector belong to"),(0,r.kt)("td",{parentName:"tr",align:null},"PROD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"username"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Windows account username"),(0,r.kt)("td",{parentName:"tr",align:null},"None")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"password"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Windows account password"),(0,r.kt)("td",{parentName:"tr",align:null},"None")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"workstation_name"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Workstation name"),(0,r.kt)("td",{parentName:"tr",align:null},"localhost")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"host_port"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Power BI Report Server host URL"),(0,r.kt)("td",{parentName:"tr",align:null},"None")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"server_alias"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Alias for Power BI Report Server host URL"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"graphql_url"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"[deprecated]"," Not used"),(0,r.kt)("td",{parentName:"tr",align:null},"None")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"report_virtual_directory_name"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Report Virtual Directory URL name"),(0,r.kt)("td",{parentName:"tr",align:null},"None")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"report_server_virtual_directory_name"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Report Server Virtual Directory URL name"),(0,r.kt)("td",{parentName:"tr",align:null},"None")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"extract_ownership"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether ownership should be ingested"),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ownership_type"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Ownership type of owner"),(0,r.kt)("td",{parentName:"tr",align:null},"NONE")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"platform_name"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"powerbi")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"platform_urn"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"urn:li:dataPlatform:powerbi")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"report_pattern"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"AllowDenyPattern (see below for fields)"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"{'allow': ","['.*']",", 'deny': [], 'ignoreCase': True}")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"report_pattern.allow"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Array of string"),(0,r.kt)("td",{parentName:"tr",align:null},"List of regex patterns to include in ingestion"),(0,r.kt)("td",{parentName:"tr",align:null},"['.*']")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"report_pattern.deny"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Array of string"),(0,r.kt)("td",{parentName:"tr",align:null},"List of regex patterns to exclude from ingestion."),(0,r.kt)("td",{parentName:"tr",align:null},"[]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"report_pattern.ignoreCase"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to ignore case sensitivity during pattern matching."),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"chart_pattern"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"AllowDenyPattern (see below for fields)"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"{'allow': ","['.*']",", 'deny': [], 'ignoreCase': True}")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"chart_pattern.allow"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Array of string"),(0,r.kt)("td",{parentName:"tr",align:null},"List of regex patterns to include in ingestion"),(0,r.kt)("td",{parentName:"tr",align:null},"['.*']")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"chart_pattern.deny"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Array of string"),(0,r.kt)("td",{parentName:"tr",align:null},"List of regex patterns to exclude from ingestion."),(0,r.kt)("td",{parentName:"tr",align:null},"[]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"chart_pattern.ignoreCase"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to ignore case sensitivity during pattern matching."),(0,r.kt)("td",{parentName:"tr",align:null},"True")))))),(0,r.kt)(i.Z,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://json-schema.org/"},"JSONSchema")," for this configuration is inlined below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "title": "PowerBiReportServerDashboardSourceConfig",\n  "description": "Any source that produces dataset urns in a single environment should inherit this class",\n  "type": "object",\n  "properties": {\n    "env": {\n      "title": "Env",\n      "description": "The environment that all assets produced by this connector belong to",\n      "default": "PROD",\n      "type": "string"\n    },\n    "username": {\n      "title": "Username",\n      "description": "Windows account username",\n      "type": "string"\n    },\n    "password": {\n      "title": "Password",\n      "description": "Windows account password",\n      "type": "string"\n    },\n    "workstation_name": {\n      "title": "Workstation Name",\n      "description": "Workstation name",\n      "default": "localhost",\n      "type": "string"\n    },\n    "host_port": {\n      "title": "Host Port",\n      "description": "Power BI Report Server host URL",\n      "type": "string"\n    },\n    "server_alias": {\n      "title": "Server Alias",\n      "description": "Alias for Power BI Report Server host URL",\n      "default": "",\n      "type": "string"\n    },\n    "graphql_url": {\n      "title": "Graphql Url",\n      "description": "[deprecated] Not used",\n      "type": "string"\n    },\n    "report_virtual_directory_name": {\n      "title": "Report Virtual Directory Name",\n      "description": "Report Virtual Directory URL name",\n      "type": "string"\n    },\n    "report_server_virtual_directory_name": {\n      "title": "Report Server Virtual Directory Name",\n      "description": "Report Server Virtual Directory URL name",\n      "type": "string"\n    },\n    "extract_ownership": {\n      "title": "Extract Ownership",\n      "description": "Whether ownership should be ingested",\n      "default": true,\n      "type": "boolean"\n    },\n    "ownership_type": {\n      "title": "Ownership Type",\n      "description": "Ownership type of owner",\n      "default": "NONE",\n      "type": "string"\n    },\n    "platform_name": {\n      "title": "Platform Name",\n      "default": "powerbi",\n      "type": "string"\n    },\n    "platform_urn": {\n      "title": "Platform Urn",\n      "default": "urn:li:dataPlatform:powerbi",\n      "type": "string"\n    },\n    "report_pattern": {\n      "title": "Report Pattern",\n      "default": {\n        "allow": [\n          ".*"\n        ],\n        "deny": [],\n        "ignoreCase": true\n      },\n      "allOf": [\n        {\n          "$ref": "#/definitions/AllowDenyPattern"\n        }\n      ]\n    },\n    "chart_pattern": {\n      "title": "Chart Pattern",\n      "default": {\n        "allow": [\n          ".*"\n        ],\n        "deny": [],\n        "ignoreCase": true\n      },\n      "allOf": [\n        {\n          "$ref": "#/definitions/AllowDenyPattern"\n        }\n      ]\n    }\n  },\n  "required": [\n    "username",\n    "password",\n    "host_port",\n    "report_virtual_directory_name",\n    "report_server_virtual_directory_name"\n  ],\n  "additionalProperties": false,\n  "definitions": {\n    "AllowDenyPattern": {\n      "title": "AllowDenyPattern",\n      "description": "A class to store allow deny regexes",\n      "type": "object",\n      "properties": {\n        "allow": {\n          "title": "Allow",\n          "description": "List of regex patterns to include in ingestion",\n          "default": [\n            ".*"\n          ],\n          "type": "array",\n          "items": {\n            "type": "string"\n          }\n        },\n        "deny": {\n          "title": "Deny",\n          "description": "List of regex patterns to exclude from ingestion.",\n          "default": [],\n          "type": "array",\n          "items": {\n            "type": "string"\n          }\n        },\n        "ignoreCase": {\n          "title": "Ignorecase",\n          "description": "Whether to ignore case sensitivity during pattern matching.",\n          "default": true,\n          "type": "boolean"\n        }\n      },\n      "additionalProperties": false\n    }\n  }\n}\n')))),(0,r.kt)("h3",{id:"code-coordinates-1"},"Code Coordinates"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Class Name: ",(0,r.kt)("inlineCode",{parentName:"li"},"datahub.ingestion.source.powerbi_report_server.report_server.PowerBiReportServerDashboardSource")),(0,r.kt)("li",{parentName:"ul"},"Browse on ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/src/datahub/ingestion/source/powerbi_report_server/report_server.py"},"GitHub"))),(0,r.kt)("h2",{id:"questions"},"Questions"),(0,r.kt)("p",null,"If you've got any questions on configuring ingestion for PowerBI, feel free to ping us on ",(0,r.kt)("a",{parentName:"p",href:"https://slack.datahubproject.io"},"our Slack")))}g.isMDXComponent=!0}}]);