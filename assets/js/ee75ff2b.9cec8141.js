"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[6259],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,f=u["".concat(o,".").concat(m)]||u[m]||d[m]||s;return n?a.createElement(f,r(r({ref:t},c),{},{components:n})):a.createElement(f,r({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=n.length,r=new Array(s);r[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var p=2;p<s;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},18679:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(67294),i=n(86010);const s="tabItem_Ymn6";function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(s,r),hidden:n},t)}},34259:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(83117),i=n(67294),s=n(86010),r=n(51048),l=n(33609),o=n(1943),p=n(72957);const c="tabList__CuJ",d="tabItem_LNqP";function u(e){const{lazy:t,block:n,defaultValue:r,values:u,groupId:m,className:f}=e,k=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=u??k.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),N=(0,l.l)(g,((e,t)=>e.value===t.value));if(N.length>0)throw new Error(`Docusaurus error: Duplicate values "${N.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===r?r:r??k.find((e=>e.props.default))?.props.value??k[0].props.value;if(null!==h&&!g.some((e=>e.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:b}=(0,o.U)(),[v,_]=(0,i.useState)(h),w=[],{blockElementScrollPositionUntilNextRender:C}=(0,p.o5)();if(null!=m){const e=y[m];null!=e&&e!==v&&g.some((t=>t.value===e))&&_(e)}const E=e=>{const t=e.currentTarget,n=w.indexOf(t),a=g[n].value;a!==v&&(C(t),_(a),null!=m&&b(m,String(a)))},T=e=>{let t=null;switch(e.key){case"Enter":E(e);break;case"ArrowRight":{const n=w.indexOf(e.currentTarget)+1;t=w[n]??w[0];break}case"ArrowLeft":{const n=w.indexOf(e.currentTarget)-1;t=w[n]??w[w.length-1];break}}t?.focus()};return i.createElement("div",{className:(0,s.Z)("tabs-container",c)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},f)},g.map((e=>{let{value:t,label:n,attributes:r}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,key:t,ref:e=>w.push(e),onKeyDown:T,onClick:E},r,{className:(0,s.Z)("tabs__item",d,r?.className,{"tabs__item--active":v===t})}),n??t)}))),t?(0,i.cloneElement)(k.filter((e=>e.props.value===v))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==v})))))}function m(e){const t=(0,r.Z)();return i.createElement(u,(0,a.Z)({key:String(t)},e))}},44928:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var a=n(83117),i=(n(67294),n(3905)),s=n(34259),r=n(18679);const l={sidebar_position:30,title:"NiFi",slug:"/generated/ingestion/sources/nifi",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/nifi.md"},o="NiFi",p={unversionedId:"docs/generated/ingestion/sources/nifi",id:"docs/generated/ingestion/sources/nifi",title:"NiFi",description:"Certified",source:"@site/genDocs/docs/generated/ingestion/sources/nifi.md",sourceDirName:"docs/generated/ingestion/sources",slug:"/generated/ingestion/sources/nifi",permalink:"/docs/generated/ingestion/sources/nifi",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/nifi.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30,title:"NiFi",slug:"/generated/ingestion/sources/nifi",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/nifi.md"},sidebar:"overviewSidebar",previous:{title:"MySQL",permalink:"/docs/generated/ingestion/sources/mysql"},next:{title:"Okta",permalink:"/docs/generated/ingestion/sources/okta"}},c={},d=[{value:"CLI based Ingestion",id:"cli-based-ingestion",level:3},{value:"Install the Plugin",id:"install-the-plugin",level:4},{value:"Starter Recipe",id:"starter-recipe",level:3},{value:"Config Details",id:"config-details",level:3},{value:"Code Coordinates",id:"code-coordinates",level:3}],u={toc:d};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"nifi"},"NiFi"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/support%20status-certified-brightgreen",alt:"Certified"})),(0,i.kt)("p",null,"This plugin extracts the following:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"NiFi flow as ",(0,i.kt)("inlineCode",{parentName:"li"},"DataFlow")," entity"),(0,i.kt)("li",{parentName:"ul"},"Ingress, egress processors, remote input and output ports as ",(0,i.kt)("inlineCode",{parentName:"li"},"DataJob")," entity"),(0,i.kt)("li",{parentName:"ul"},"Input and output ports receiving remote connections as ",(0,i.kt)("inlineCode",{parentName:"li"},"Dataset")," entity"),(0,i.kt)("li",{parentName:"ul"},"Lineage information between external datasets and ingress/egress processors by analyzing provenance events")),(0,i.kt)("p",null,"Current limitations:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Limited ingress/egress processors are supported",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"S3: ",(0,i.kt)("inlineCode",{parentName:"li"},"ListS3"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"FetchS3Object"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"PutS3Object")),(0,i.kt)("li",{parentName:"ul"},"SFTP: ",(0,i.kt)("inlineCode",{parentName:"li"},"ListSFTP"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"FetchSFTP"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"GetSFTP"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"PutSFTP"))))),(0,i.kt)("h3",{id:"cli-based-ingestion"},"CLI based Ingestion"),(0,i.kt)("h4",{id:"install-the-plugin"},"Install the Plugin"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"pip install 'acryl-datahub[nifi]'\n")),(0,i.kt)("h3",{id:"starter-recipe"},"Starter Recipe"),(0,i.kt)("p",null,"Check out the following recipe to get started with ingestion! See ",(0,i.kt)("a",{parentName:"p",href:"#config-details"},"below")," for full configuration options."),(0,i.kt)("p",null,"For general pointers on writing and running a recipe, see our ",(0,i.kt)("a",{parentName:"p",href:"/docs/metadata-ingestion#recipes"},"main recipe guide"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'source:\n  type: "nifi"\n  config:\n    # Coordinates\n    site_url: "https://localhost:8443/nifi/"\n\n    # Credentials\n    auth: SINGLE_USER\n    username: admin\n    password: password\n\nsink:\n  # sink configs\n')),(0,i.kt)("h3",{id:"config-details"},"Config Details"),(0,i.kt)(s.Z,{mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"options",label:"Options",default:!0,mdxType:"TabItem"},(0,i.kt)("p",null,"Note that a ",(0,i.kt)("inlineCode",{parentName:"p"},".")," is used to denote nested fields in the YAML recipe."),(0,i.kt)("div",{className:"config-table"},(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"site_url"),"\xa0",(0,i.kt)("abbr",{title:"Required"},"\u2705"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"string"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"URI to connect")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"auth"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"Enum"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Nifi authentication. must be one of : NO_AUTH, SINGLE_USER, CLIENT_CERT ",(0,i.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,i.kt)("span",{className:"default-value"},"NO","_","AUTH")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"ca_file"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"string"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Path to PEM file containing certs for the root CA(s) for the NiFi")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"client_cert_file"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"string"))),(0,i.kt)("td",{parentName:"tr",align:"left"},'Path to PEM file containing the public certificates for the user/client identity, must be set for auth = "CLIENT_CERT"')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"client_key_file"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"string"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Path to PEM file containing the client\u2019s secret key")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"client_key_password"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"string"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The password to decrypt the client_key_file")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"password"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"string"))),(0,i.kt)("td",{parentName:"tr",align:"left"},'Nifi password, must be set for auth = "SINGLE_USER"')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"provenance_days"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"integer"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"time window to analyze provenance events for external datasets ",(0,i.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,i.kt)("span",{className:"default-value"},"7")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"site_name"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"string"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Site name to identify this site with, useful when using input and output ports receiving remote connections ",(0,i.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,i.kt)("span",{className:"default-value"},"default")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"site_url_to_site_name"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"map(str,string)"))),(0,i.kt)("td",{parentName:"tr",align:"left"})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"username"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"string"))),(0,i.kt)("td",{parentName:"tr",align:"left"},'Nifi username, must be set for auth = "SINGLE_USER"')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"env"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"string"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The environment that all assets produced by this connector belong to ",(0,i.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,i.kt)("span",{className:"default-value"},"PROD")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"process_group_pattern"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"AllowDenyPattern"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"regex patterns for filtering process groups ",(0,i.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,i.kt)("span",{className:"default-value"},"{","'","allow","'",": ","[","'",".","*","'","]",", ","'","deny","'",": ","[","]",", ","'","ignoreCase","'",": True","}")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-prefix"},"process_group_pattern."),(0,i.kt)("span",{className:"path-main"},"allow"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"array(string)"))),(0,i.kt)("td",{parentName:"tr",align:"left"})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-prefix"},"process_group_pattern."),(0,i.kt)("span",{className:"path-main"},"deny"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"array(string)"))),(0,i.kt)("td",{parentName:"tr",align:"left"})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-prefix"},"process_group_pattern."),(0,i.kt)("span",{className:"path-main"},"ignoreCase"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"boolean"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,i.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,i.kt)("span",{className:"default-value"},"True")))))))),(0,i.kt)(r.Z,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://json-schema.org/"},"JSONSchema")," for this configuration is inlined below."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "title": "NifiSourceConfig",\n  "description": "Any source that produces dataset urns in a single environment should inherit this class",\n  "type": "object",\n  "properties": {\n    "env": {\n      "title": "Env",\n      "description": "The environment that all assets produced by this connector belong to",\n      "default": "PROD",\n      "type": "string"\n    },\n    "site_url": {\n      "title": "Site Url",\n      "description": "URI to connect",\n      "type": "string"\n    },\n    "auth": {\n      "description": "Nifi authentication. must be one of : NO_AUTH, SINGLE_USER, CLIENT_CERT",\n      "default": "NO_AUTH",\n      "allOf": [\n        {\n          "$ref": "#/definitions/NifiAuthType"\n        }\n      ]\n    },\n    "provenance_days": {\n      "title": "Provenance Days",\n      "description": "time window to analyze provenance events for external datasets",\n      "default": 7,\n      "type": "integer"\n    },\n    "process_group_pattern": {\n      "title": "Process Group Pattern",\n      "description": "regex patterns for filtering process groups",\n      "default": {\n        "allow": [\n          ".*"\n        ],\n        "deny": [],\n        "ignoreCase": true\n      },\n      "allOf": [\n        {\n          "$ref": "#/definitions/AllowDenyPattern"\n        }\n      ]\n    },\n    "site_name": {\n      "title": "Site Name",\n      "description": "Site name to identify this site with, useful when using input and output ports receiving remote connections",\n      "default": "default",\n      "type": "string"\n    },\n    "site_url_to_site_name": {\n      "title": "Site Url To Site Name",\n      "description": "Lookup to find site_name for site_url, required if using remote process groups in nifi flow",\n      "default": {},\n      "type": "object",\n      "additionalProperties": {\n        "type": "string"\n      }\n    },\n    "username": {\n      "title": "Username",\n      "description": "Nifi username, must be set for auth = \\"SINGLE_USER\\"",\n      "type": "string"\n    },\n    "password": {\n      "title": "Password",\n      "description": "Nifi password, must be set for auth = \\"SINGLE_USER\\"",\n      "type": "string"\n    },\n    "client_cert_file": {\n      "title": "Client Cert File",\n      "description": "Path to PEM file containing the public certificates for the user/client identity, must be set for auth = \\"CLIENT_CERT\\"",\n      "type": "string"\n    },\n    "client_key_file": {\n      "title": "Client Key File",\n      "description": "Path to PEM file containing the client\\u2019s secret key",\n      "type": "string"\n    },\n    "client_key_password": {\n      "title": "Client Key Password",\n      "description": "The password to decrypt the client_key_file",\n      "type": "string"\n    },\n    "ca_file": {\n      "title": "Ca File",\n      "description": "Path to PEM file containing certs for the root CA(s) for the NiFi",\n      "type": "string"\n    }\n  },\n  "required": [\n    "site_url"\n  ],\n  "additionalProperties": false,\n  "definitions": {\n    "NifiAuthType": {\n      "title": "NifiAuthType",\n      "description": "An enumeration.",\n      "enum": [\n        "NO_AUTH",\n        "SINGLE_USER",\n        "CLIENT_CERT"\n      ]\n    },\n    "AllowDenyPattern": {\n      "title": "AllowDenyPattern",\n      "description": "A class to store allow deny regexes",\n      "type": "object",\n      "properties": {\n        "allow": {\n          "title": "Allow",\n          "description": "List of regex patterns to include in ingestion",\n          "default": [\n            ".*"\n          ],\n          "type": "array",\n          "items": {\n            "type": "string"\n          }\n        },\n        "deny": {\n          "title": "Deny",\n          "description": "List of regex patterns to exclude from ingestion.",\n          "default": [],\n          "type": "array",\n          "items": {\n            "type": "string"\n          }\n        },\n        "ignoreCase": {\n          "title": "Ignorecase",\n          "description": "Whether to ignore case sensitivity during pattern matching.",\n          "default": true,\n          "type": "boolean"\n        }\n      },\n      "additionalProperties": false\n    }\n  }\n}\n')))),(0,i.kt)("h3",{id:"code-coordinates"},"Code Coordinates"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Class Name: ",(0,i.kt)("inlineCode",{parentName:"li"},"datahub.ingestion.source.nifi.NifiSource")),(0,i.kt)("li",{parentName:"ul"},"Browse on ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/src/datahub/ingestion/source/nifi.py"},"GitHub"))),(0,i.kt)("h2",null,"Questions"),(0,i.kt)("p",null,"If you've got any questions on configuring ingestion for NiFi, feel free to ping us on ",(0,i.kt)("a",{parentName:"p",href:"https://slack.datahubproject.io"},"our Slack"),"."))}m.isMDXComponent=!0}}]);