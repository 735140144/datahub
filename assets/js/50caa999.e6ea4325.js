"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[1508],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),i=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=i(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=i(n),m=o,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(f,s(s({ref:t},u),{},{components:n})):r.createElement(f,s({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,s[1]=c;for(var i=2;i<a;i++)s[i]=n[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},92180:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>i});var r=n(83117),o=(n(67294),n(3905));const a={title:"Generate Access Token",slug:"/tools/tutorials/references/generate-access-token",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/tools/tutorials/references/generate-access-token.md"},s="Generate Access Token",c={unversionedId:"docs/tools/tutorials/references/generate-access-token",id:"docs/tools/tutorials/references/generate-access-token",title:"Generate Access Token",description:"With CURL, you need to provide tokens. To generate token, run the following comand.",source:"@site/genDocs/docs/tools/tutorials/references/generate-access-token.md",sourceDirName:"docs/tools/tutorials/references",slug:"/tools/tutorials/references/generate-access-token",permalink:"/docs/tools/tutorials/references/generate-access-token",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/tools/tutorials/references/generate-access-token.md",tags:[],version:"current",frontMatter:{title:"Generate Access Token",slug:"/tools/tutorials/references/generate-access-token",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/tools/tutorials/references/generate-access-token.md"},sidebar:"overviewSidebar",previous:{title:"Adding Owners",permalink:"/docs/tools/tutorials/adding-ownerships"},next:{title:"Preparing Your Local DataHub Environment",permalink:"/docs/tools/tutorials/references/prepare-datahub"}},l={},i=[],u={toc:i};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"generate-access-token"},"Generate Access Token"),(0,o.kt)("p",null,"With CURL, you need to provide tokens. To generate token, run the following comand. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'curl --location --request POST \'http://localhost:8080/api/graphql\' \\\n--header \'X-DataHub-Actor: urn:li:corpuser:datahub\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{ "query":"mutation { createAccessToken(input: { type: PERSONAL, actorUrn: \\"urn:li:corpuser:datahub\\", duration: ONE_HOUR, name: \\"my personal token\\" } ) { accessToken metadata { id name description} } }", "variables":{}}\'\n')),(0,o.kt)("p",null,"Expected Response: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "createAccessToken": {\n      "accessToken": <my-access-token>,\n      "metadata": {\n        "id": <my-id>,\n        "name": "my personal token",\n        "description": null\n      }\n    }\n  },\n  "extensions": {}\n}\n')),(0,o.kt)("p",null,"You can now copy ",(0,o.kt)("inlineCode",{parentName:"p"},"accessToken")," and pass it to header."))}p.isMDXComponent=!0}}]);